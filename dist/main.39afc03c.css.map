{"version":3,"sources":["sub.scss","sub2.scss","main.scss"],"names":[],"mappings":";AACI;EACI;;;ACFR;EACI;;;ACMA;EACI,OAJA;EAKA,kBAJI;;;AASX;AAID;EACI;;AACA;EACI;;;AAKA;EACI;;;AAKR;EAAS;;AACT;EAAU;;AACV;EAAS;;;AAIb;EAEQ;EACA;EACA;EAGA;EACA;;;AAcR;EAEI;EACA,KAZI;EAaJ,QAHQ;EAUR,MALa;;AADb;EAEI,OAhBA;EAiBA,QAFS;EAGT;;;AAOR;EACI;EACA;EACA;EAQA;;;AAEJ;EACI;EACA;EACA;EACA;;;AAEJ;EAEI;;;AASJ;EAJI;EACA;EACA;;;AAYJ;EAJI,OAKa;EAJb,QAIa;EAHb,kBAGoB;;AACpB;EANA,OADc;EAEd,QAFc;EAGd,kBAKyB;;;AAG7B;EAVI,OAWa;EAVb,QAUa;EATb,kBAH8B;;;AAoB9B;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AADJ;EACI;;;AAeR;EAEI,OADQ;EAER;EAZA;EACA;EACA;;;AAcJ;EAGI;EACA;;AACA;EACI;EACA;;AAEJ;EACI;EACA","file":"main.39afc03c.css","sourceRoot":"..","sourcesContent":["body {\n    .container {\n        background-color: tomato;\n    }\n}","body {\n    background-color: yellow;\n}","// 가져오기\n@import \"./sub.scss\",\"./sub2.scss\";\n\n// 컬러 변수선언\n$color: royalblue;\n$mainColor: red;\n.container {\n    h1 {\n        color:$color;\n        background-color: $mainColor;\n    }\n}\n // Scss는 주석이 두개인데 일반 css의 주석처리와 js의 주석이 가능한데 차이점은\n // <- 컴파일을 했을때 보이지 않고\n /* <- 컴파일을 했을때 나타나게 된다 . */\n// , /* */\n\n// & - 상위 선택자 참조\n.btn {\n    position: absolute;\n    &.active{ // === .btn.active\n        color:red;\n    }\n}\n.list {\n    li{\n        &:last-child { // === li:last-child\n            margin-left: 0px;\n        }\n    }\n}\n.fs {\n    &-small {font-size: 15px;} // === .fs-small\n    &-medium {font-size: 25px;} // === .fs-medium\n    &-large {font-size: 35px;} // === .fs-large\n}\n\n// 중첩된 속성\n.box {\n    font: { // 네임 스페이스가 동일하다. font- 로 해석된다\n        weight: bold; // font-weight: bold;\n        size: 10px; // font-size: 10px;\n        family: sans-serif; // font-family: sans-serif;\n    }\n    margin: {\n        top:10px; //margin-top: 10px;\n        bottom:10px; //margin-bottom: 10px;\n    }\n}\n\n//변수\n$size : 200px; // size란 변수에 100px을 할당.\n// 유효범위가 있다 함수내 변수나 전역변수 느낌과 동일해서 \n// $size :200px은 어디서든 쓸수 있다\n// $inner:50px은 변수가 생성된 {}안에서만 사용이 가능하다\n\n// .box{\n//     font-size: $inner; //Error\n// }\n\n.container {\n    $inner :200px;\n    position: fixed;\n    top : $size; //200\n    bottom: $inner; //200\n    .item {\n        $inner : 50px;  //inner 재할당\n        width: $size; //200\n        height: $inner; // 50px\n        transform: translateX(100px);\n    }\n    left: $inner ; // 여기선 50px 이다 . \n    // js 문법처럼 내부에서 재할당이 되었지만 밑으로 읽어내려가면서 할당된50px로 읽힌다\n}\n\n// 산술연산\ndiv{\n    width: 20px + 20px;\n    height: 40px - 10px;\n    font-size: 10px * 2 ;\n    // margin-top: 30px / 2;\n    // 나누기 연산자가 먹지않음 /이게 구분자 이기 때문에\n    //첫번째 방법 ()\n    // margin-bottom: (30px / 2);\n    // 두번째 방법 변수선언후 나누기\n    // $division : 30px;\n    // margin-left: $division / 2 ;\n    padding: 20px % 7 ; //나머지\n}\nspan{\n    font-size: 10px;\n    line-height: 10px;\n    font-family: serif;\n    font: 10px / 10px serif;\n}\ndiv{\n    // width:100% - 200px; //Error 단위가 같아야함\n    width: calc(100% - 200px);\n}\n\n//재활용\n@mixin center { //center 선언\n    display: flex;\n    justify-content : center;\n    align-items: center;\n}\n.container {\n   @include center; // center 사용\n}\n\n//인수사용\n@mixin box($size: 100px , $color: tomato) { // size와 color의 기본값 추가\n    width: $size;\n    height: $size;\n    background-color: $color;\n}\n.container {\n    @include box(200px, red);\n    .item {\n        @include box($color: green); // size 기본값 사용 keyword인수 사용\n    }\n}\n.box {\n    @include box(50px);\n}\n// 반복문\n// for(let i = 0; i < 10; i++){\n//     console.log(`loop-${i}`)\n// }\n// scss의 보간법 #{}\n@for $i from 1 through 10 {\n    .box:nth-child(#{$i}) {\n        width:100px * $i;\n    }\n}\n\n//함수\n@mixin center { //center 선언\n    display: flex;\n    justify-content : center;\n    align-items: center;\n}\n\n@function ratio($size, $ratio) {\n    @return $size * $ratio\n}\n\n.box{\n    $width: 100px;\n    width: $width;\n    height: ratio($width, (9/16));\n    @include center\n}\n//내장함수\n.box {\n    // color: grayscale(red); gray로 변환\n    // color: invert(red) 색상반전\n    color: rgba(royalblue, .5); // opacity\n    background-color : mix(red,blue); //두가지 색상 섞는것\n    &-k{\n        color: lighten(red,20%); //색상 밝게해줌 20%\n        background-color :  darken(blue,20%); // 색상어둡게 해줌 20%\n    }\n    &-t{\n        color: saturate(royalblue,40%); // 채도 40% 올림\n        background-color: desaturate(blue,40%); // 채도 40% 내림\n    }\n}"]}